<?xml version = '1.0' encoding = 'UTF-8'?>
<!--
*** GENERATED FROM project.xml - DO NOT EDIT  ***
***         EDIT ../build.xml INSTEAD         ***

For the purpose of easier reading the script
is divided into following sections:

  - initialization
  - compilation
  - jar
  - execution
  - debugging
  - javadoc
  - test compilation
  - test execution
  - test debugging
  - applet
  - cleanup

        --><project xmlns:j2seproject1="http://www.netbeans.org/ns/j2se-project/1" xmlns:jaxrpc="http://www.netbeans.org/ns/j2se-project/jax-rpc" xmlns:j2seproject3="http://www.netbeans.org/ns/j2se-project/3" name="UCA-impl" default="default" basedir="..">
   <import file="jfx-impl.xml"/>
   <fail message="Please build using Ant 1.8.0 or higher.">
      <condition>
         <not>
            <antversion atleast="1.8.0"/>
         </not>
      </condition>
   </fail>
   <target name="default" depends="test,jar,javadoc" description="Build and test whole project."/>
   <!-- 
                ======================
                INITIALIZATION SECTION 
                ======================
            -->
   <target name="-pre-init">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-init-private" depends="-pre-init">
      <property file="nbproject/private/config.properties"/>
      <property file="nbproject/private/configs/${config}.properties"/>
      <property file="nbproject/private/private.properties"/>
   </target>
   <target name="-init-user" depends="-pre-init,-init-private">
      <property file="${user.properties.file}"/>
      <!-- The two properties below are usually overridden -->
      <!-- by the active platform. Just a fallback. -->
      <property name="default.javac.source" value="1.6"/>
      <property name="default.javac.target" value="1.6"/>
   </target>
   <target name="-init-project" depends="-pre-init,-init-private,-init-user">
      <property file="nbproject/configs/${config}.properties"/>
      <property file="nbproject/project.properties"/>
   </target>
   <target name="-do-init" depends="-pre-init,-init-private,-init-user,-init-project,-init-macrodef-property">
      <property name="platform.java" value="${java.home}/bin/java"/>
      <available file="${manifest.file}" property="manifest.available"/>
      <condition property="splashscreen.available">
         <and>
            <not>
               <equals arg1="${application.splash}" arg2="" trim="true"/>
            </not>
            <available file="${application.splash}"/>
         </and>
      </condition>
      <condition property="main.class.available">
         <and>
            <isset property="main.class"/>
            <not>
               <equals arg1="${main.class}" arg2="" trim="true"/>
            </not>
         </and>
      </condition>
      <condition property="profile.available">
         <and>
            <isset property="javac.profile"/>
            <length length="0" string="${javac.profile}" when="greater"/>
            <matches pattern="((1\.[89])|9)(\..*)?" string="${javac.source}"/>
         </and>
      </condition>
      <condition property="do.archive">
         <or>
            <not>
               <istrue value="${jar.archive.disabled}"/>
            </not>
            <istrue value="${not.archive.disabled}"/>
         </or>
      </condition>
      <condition property="do.mkdist">
         <and>
            <isset property="do.archive"/>
            <isset property="libs.CopyLibs.classpath"/>
            <not>
               <istrue value="${mkdist.disabled}"/>
            </not>
         </and>
      </condition>
      <condition property="do.archive+manifest.available">
         <and>
            <isset property="manifest.available"/>
            <istrue value="${do.archive}"/>
         </and>
      </condition>
      <condition property="do.archive+main.class.available">
         <and>
            <isset property="main.class.available"/>
            <istrue value="${do.archive}"/>
         </and>
      </condition>
      <condition property="do.archive+splashscreen.available">
         <and>
            <isset property="splashscreen.available"/>
            <istrue value="${do.archive}"/>
         </and>
      </condition>
      <condition property="do.archive+profile.available">
         <and>
            <isset property="profile.available"/>
            <istrue value="${do.archive}"/>
         </and>
      </condition>
      <condition property="have.tests">
         <or>
            <available file="${test.src.dir}"/>
         </or>
      </condition>
      <condition property="have.sources">
         <or>
            <available file="${src.dir}"/>
         </or>
      </condition>
      <condition property="netbeans.home+have.tests">
         <and>
            <isset property="netbeans.home"/>
            <isset property="have.tests"/>
         </and>
      </condition>
      <condition property="no.javadoc.preview">
         <and>
            <isset property="javadoc.preview"/>
            <isfalse value="${javadoc.preview}"/>
         </and>
      </condition>
      <property name="run.jvmargs" value=""/>
      <property name="run.jvmargs.ide" value=""/>
      <property name="javac.compilerargs" value=""/>
      <property name="work.dir" value="${basedir}"/>
      <condition property="no.deps">
         <and>
            <istrue value="${no.dependencies}"/>
         </and>
      </condition>
      <property name="javac.debug" value="true"/>
      <property name="javadoc.preview" value="true"/>
      <property name="application.args" value=""/>
      <property name="source.encoding" value="${file.encoding}"/>
      <property name="runtime.encoding" value="${source.encoding}"/>
      <property name="manifest.encoding" value="${source.encoding}"/>
      <condition property="javadoc.encoding.used" value="${javadoc.encoding}">
         <and>
            <isset property="javadoc.encoding"/>
            <not>
               <equals arg1="${javadoc.encoding}" arg2=""/>
            </not>
         </and>
      </condition>
      <property name="javadoc.encoding.used" value="${source.encoding}"/>
      <property name="includes" value="**"/>
      <property name="excludes" value=""/>
      <property name="do.depend" value="false"/>
      <condition property="do.depend.true">
         <istrue value="${do.depend}"/>
      </condition>
      <path id="endorsed.classpath.path" path="${endorsed.classpath}"/>
      <condition property="endorsed.classpath.cmd.line.arg" value="-Xbootclasspath/p:'${toString:endorsed.classpath.path}'" else="">
         <and>
            <isset property="endorsed.classpath"/>
            <not>
               <equals arg1="${endorsed.classpath}" arg2="" trim="true"/>
            </not>
         </and>
      </condition>
      <condition property="javac.profile.cmd.line.arg" value="-profile ${javac.profile}" else="">
         <isset property="profile.available"/>
      </condition>
      <condition property="jdkBug6558476" else="false">
         <and>
            <matches string="${java.specification.version}" pattern="1\.[56]"/>
            <not>
               <os family="unix"/>
            </not>
         </and>
      </condition>
      <condition property="javac.fork" else="false">
         <or>
            <istrue value="${jdkBug6558476}"/>
            <istrue value="${javac.external.vm}"/>
         </or>
      </condition>
      <property name="jar.index" value="false"/>
      <property name="jar.index.metainf" value="${jar.index}"/>
      <property name="copylibs.rebase" value="true"/>
      <available file="${meta.inf.dir}/persistence.xml" property="has.persistence.xml"/>
      <condition property="junit.available">
         <or>
            <available classname="org.junit.Test" classpath="${run.test.classpath}"/>
            <available classname="junit.framework.Test" classpath="${run.test.classpath}"/>
         </or>
      </condition>
      <condition property="testng.available">
         <available classname="org.testng.annotations.Test" classpath="${run.test.classpath}"/>
      </condition>
      <condition property="junit+testng.available">
         <and>
            <istrue value="${junit.available}"/>
            <istrue value="${testng.available}"/>
         </and>
      </condition>
      <condition property="testng.mode" value="mixed" else="testng">
         <istrue value="${junit+testng.available}"/>
      </condition>
      <condition property="testng.debug.mode" value="-mixed" else="">
         <istrue value="${junit+testng.available}"/>
      </condition>
      <property name="java.failonerror" value="true"/>
   </target>
   <target name="-post-init">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-init-check" depends="-pre-init,-init-private,-init-user,-init-project,-do-init">
      <fail unless="src.dir">Must set src.dir</fail>
      <fail unless="test.src.dir">Must set test.src.dir</fail>
      <fail unless="build.dir">Must set build.dir</fail>
      <fail unless="dist.dir">Must set dist.dir</fail>
      <fail unless="build.classes.dir">Must set build.classes.dir</fail>
      <fail unless="dist.javadoc.dir">Must set dist.javadoc.dir</fail>
      <fail unless="build.test.classes.dir">Must set build.test.classes.dir</fail>
      <fail unless="build.test.results.dir">Must set build.test.results.dir</fail>
      <fail unless="build.classes.excludes">Must set build.classes.excludes</fail>
      <fail unless="dist.jar">Must set dist.jar</fail>
   </target>
   <target name="-init-macrodef-property">
      <macrodef name="property" uri="http://www.netbeans.org/ns/j2se-project/1">
         <attribute name="name"/>
         <attribute name="value"/>
         <sequential>
            <property name="@{name}" value="${@{value}}"/>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-javac-with-processors" depends="-init-ap-cmdline-properties" if="ap.supported.internal">
      <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="srcdir" default="${src.dir}"/>
         <attribute name="destdir" default="${build.classes.dir}"/>
         <attribute name="classpath" default="${javac.classpath}"/>
         <attribute name="processorpath" default="${javac.processorpath}"/>
         <attribute name="apgeneratedsrcdir" default="${build.generated.sources.dir}/ap-source-output"/>
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="debug" default="${javac.debug}"/>
         <attribute name="sourcepath" default="${empty.dir}"/>
         <attribute name="gensrcdir" default="${empty.dir}"/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="empty.dir" location="${build.dir}/empty"/>
            <mkdir dir="${empty.dir}"/>
            <mkdir dir="@{apgeneratedsrcdir}"/>
            <javac srcdir="@{srcdir}" sourcepath="@{sourcepath}" destdir="@{destdir}" debug="@{debug}" deprecation="${javac.deprecation}" encoding="${source.encoding}" source="${javac.source}" target="${javac.target}" includes="@{includes}" excludes="@{excludes}" fork="${javac.fork}" tempdir="${java.io.tmpdir}" includeantruntime="false">
               <src>
                  <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                     <include name="*"/>
                  </dirset>
               </src>
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
               <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>
               <compilerarg line="${javac.profile.cmd.line.arg}"/>
               <compilerarg line="${javac.compilerargs}"/>
               <compilerarg value="-processorpath"/>
               <compilerarg path="@{processorpath}:${empty.dir}"/>
               <compilerarg line="${ap.processors.internal}"/>
               <compilerarg line="${annotation.processing.processor.options}"/>
               <compilerarg value="-s"/>
               <compilerarg path="@{apgeneratedsrcdir}"/>
               <compilerarg line="${ap.proc.none.internal}"/>
               <customize/>
            </javac>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-javac-without-processors" depends="-init-ap-cmdline-properties" unless="ap.supported.internal">
      <macrodef name="javac" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="srcdir" default="${src.dir}"/>
         <attribute name="destdir" default="${build.classes.dir}"/>
         <attribute name="classpath" default="${javac.classpath}"/>
         <attribute name="processorpath" default="${javac.processorpath}"/>
         <attribute name="apgeneratedsrcdir" default="${build.generated.sources.dir}/ap-source-output"/>
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="debug" default="${javac.debug}"/>
         <attribute name="sourcepath" default="${empty.dir}"/>
         <attribute name="gensrcdir" default="${empty.dir}"/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="empty.dir" location="${build.dir}/empty"/>
            <mkdir dir="${empty.dir}"/>
            <javac srcdir="@{srcdir}" sourcepath="@{sourcepath}" destdir="@{destdir}" debug="@{debug}" deprecation="${javac.deprecation}" encoding="${source.encoding}" source="${javac.source}" target="${javac.target}" includes="@{includes}" excludes="@{excludes}" fork="${javac.fork}" tempdir="${java.io.tmpdir}" includeantruntime="false">
               <src>
                  <dirset dir="@{gensrcdir}" erroronmissingdir="false">
                     <include name="*"/>
                  </dirset>
               </src>
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
               <compilerarg line="${endorsed.classpath.cmd.line.arg}"/>
               <compilerarg line="${javac.profile.cmd.line.arg}"/>
               <compilerarg line="${javac.compilerargs}"/>
               <customize/>
            </javac>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-javac" depends="-init-macrodef-javac-with-processors,-init-macrodef-javac-without-processors">
      <macrodef name="depend" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="srcdir" default="${src.dir}"/>
         <attribute name="destdir" default="${build.classes.dir}"/>
         <attribute name="classpath" default="${javac.classpath}"/>
         <sequential>
            <depend srcdir="@{srcdir}" destdir="@{destdir}" cache="${build.dir}/depcache" includes="${includes}" excludes="${excludes}">
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
            </depend>
         </sequential>
      </macrodef>
      <macrodef name="force-recompile" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="destdir" default="${build.classes.dir}"/>
         <sequential>
            <fail unless="javac.includes">Must set javac.includes</fail>
            <pathconvert property="javac.includes.binary" pathsep="${line.separator}">
               <path>
                  <filelist dir="@{destdir}" files="${javac.includes}"/>
               </path>
               <globmapper from="*.java" to="*.class"/>
            </pathconvert>
            <tempfile property="javac.includesfile.binary" deleteonexit="true"/>
            <echo message="${javac.includes.binary}" file="${javac.includesfile.binary}"/>
            <delete>
               <files includesfile="${javac.includesfile.binary}"/>
            </delete>
            <delete>
               <fileset file="${javac.includesfile.binary}"/>
            </delete>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-init" if="${junit.available}">
      <condition property="nb.junit.batch" value="true" else="false">
         <and>
            <istrue value="${junit.available}"/>
            <not>
               <isset property="test.method"/>
            </not>
         </and>
      </condition>
      <condition property="nb.junit.single" value="true" else="false">
         <and>
            <istrue value="${junit.available}"/>
            <isset property="test.method"/>
         </and>
      </condition>
   </target>
   <target name="-init-test-properties">
      <property name="test.binaryincludes" value="&lt;nothing>"/>
      <property name="test.binarytestincludes" value=""/>
      <property name="test.binaryexcludes" value=""/>
   </target>
   <target name="-init-macrodef-junit-single" if="${nb.junit.single}" unless="${nb.junit.batch}">
      <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="junit.forkmode" value="perTest"/>
            <junit showoutput="true" fork="true" forkmode="${junit.forkmode}" dir="${work.dir}" failureproperty="tests.failed" errorproperty="tests.failed" tempdir="${build.dir}">
               <test todir="${build.test.results.dir}" name="@{testincludes}" methods="@{testmethods}"/>
               <syspropertyset>
                  <propertyref prefix="test-sys-prop."/>
                  <mapper type="glob" from="test-sys-prop.*" to="*"/>
               </syspropertyset>
               <formatter type="brief" usefile="false"/>
               <formatter type="xml"/>
               <jvmarg value="-ea"/>
               <customize/>
            </junit>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-batch" if="${nb.junit.batch}" unless="${nb.junit.single}" depends="-init-test-properties">
      <macrodef name="junit" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="junit.forkmode" value="perTest"/>
            <junit showoutput="true" fork="true" forkmode="${junit.forkmode}" dir="${work.dir}" failureproperty="tests.failed" errorproperty="tests.failed" tempdir="${build.dir}">
               <batchtest todir="${build.test.results.dir}">
                  <fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},${excludes}">
                     <filename name="@{testincludes}"/>
                  </fileset>
                  <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">
                     <filename name="${test.binarytestincludes}"/>
                  </fileset>
               </batchtest>
               <syspropertyset>
                  <propertyref prefix="test-sys-prop."/>
                  <mapper type="glob" from="test-sys-prop.*" to="*"/>
               </syspropertyset>
               <formatter type="brief" usefile="false"/>
               <formatter type="xml"/>
               <jvmarg value="-ea"/>
               <customize/>
            </junit>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit" if="${junit.available}" depends="-init-macrodef-junit-init,-init-macrodef-junit-single, -init-macrodef-junit-batch"/>
   <target name="-init-macrodef-testng" if="${testng.available}">
      <macrodef name="testng" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true"/>
         <sequential>
            <condition property="testng.methods.arg" value="@{testincludes}.@{testmethods}" else="">
               <isset property="test.method"/>
            </condition>
            <union id="test.set">
               <fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},**/*.xml,${excludes}">
                  <filename name="@{testincludes}"/>
               </fileset>
            </union>
            <taskdef name="testng" classname="org.testng.TestNGAntTask" classpath="${run.test.classpath}"/>
            <testng listeners="org.testng.reporters.VerboseReporter" mode="${testng.mode}" classfilesetref="test.set" workingDir="${work.dir}" failureProperty="tests.failed" methods="${testng.methods.arg}" outputdir="${build.test.results.dir}" suitename="UCA" testname="TestNG tests">
               <xmlfileset dir="${build.test.classes.dir}" includes="@{testincludes}"/>
               <propertyset>
                  <propertyref prefix="test-sys-prop."/>
                  <mapper from="test-sys-prop.*" to="*" type="glob"/>
               </propertyset>
               <customize/>
            </testng>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-test-impl">
      <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true" implicit="true"/>
         <sequential>
            <echo>No tests executed.</echo>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-impl" depends="-init-macrodef-junit" if="${junit.available}">
      <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true" implicit="true"/>
         <sequential>
            <j2seproject3:junit includes="@{includes}" excludes="@{excludes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
               <customize/>
            </j2seproject3:junit>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-testng-impl" depends="-init-macrodef-testng" if="${testng.available}">
      <macrodef name="test-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true" implicit="true"/>
         <sequential>
            <j2seproject3:testng includes="@{includes}" excludes="@{excludes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
               <customize/>
            </j2seproject3:testng>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-test" depends="-init-macrodef-test-impl,-init-macrodef-junit-impl,-init-macrodef-testng-impl">
      <macrodef name="test" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <sequential>
            <j2seproject3:test-impl includes="@{includes}" excludes="@{excludes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
               <customize>
                  <classpath>
                     <path path="${run.test.classpath}"/>
                  </classpath>
                  <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
                  <jvmarg line="${run.jvmargs}"/>
                  <jvmarg line="${run.jvmargs.ide}"/>
               </customize>
            </j2seproject3:test-impl>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-debug" if="${junit.available}" unless="${nb.junit.batch}">
      <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="junit.forkmode" value="perTest"/>
            <junit showoutput="true" fork="true" forkmode="${junit.forkmode}" dir="${work.dir}" failureproperty="tests.failed" errorproperty="tests.failed" tempdir="${build.dir}">
               <test todir="${build.test.results.dir}" name="@{testincludes}" methods="@{testmethods}"/>
               <syspropertyset>
                  <propertyref prefix="test-sys-prop."/>
                  <mapper type="glob" from="test-sys-prop.*" to="*"/>
               </syspropertyset>
               <formatter type="brief" usefile="false"/>
               <formatter type="xml"/>
               <jvmarg value="-ea"/>
               <jvmarg line="${debug-args-line}"/>
               <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
               <customize/>
            </junit>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-debug-batch" if="${nb.junit.batch}" depends="-init-test-properties">
      <macrodef name="junit-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true"/>
         <sequential>
            <property name="junit.forkmode" value="perTest"/>
            <junit showoutput="true" fork="true" forkmode="${junit.forkmode}" dir="${work.dir}" failureproperty="tests.failed" errorproperty="tests.failed" tempdir="${build.dir}">
               <batchtest todir="${build.test.results.dir}">
                  <fileset dir="${test.src.dir}" includes="@{includes}" excludes="@{excludes},${excludes}">
                     <filename name="@{testincludes}"/>
                  </fileset>
                  <fileset dir="${build.test.classes.dir}" excludes="@{excludes},${excludes},${test.binaryexcludes}" includes="${test.binaryincludes}">
                     <filename name="${test.binarytestincludes}"/>
                  </fileset>
               </batchtest>
               <syspropertyset>
                  <propertyref prefix="test-sys-prop."/>
                  <mapper type="glob" from="test-sys-prop.*" to="*"/>
               </syspropertyset>
               <formatter type="brief" usefile="false"/>
               <formatter type="xml"/>
               <jvmarg value="-ea"/>
               <jvmarg line="${debug-args-line}"/>
               <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
               <customize/>
            </junit>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-junit-debug-impl" depends="-init-macrodef-junit-debug,-init-macrodef-junit-debug-batch" if="${junit.available}">
      <macrodef name="test-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <element name="customize" optional="true" implicit="true"/>
         <sequential>
            <j2seproject3:junit-debug includes="@{includes}" excludes="@{excludes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
               <customize/>
            </j2seproject3:junit-debug>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-testng-debug" if="${testng.available}">
      <macrodef name="testng-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="testClass" default="${main.class}"/>
         <attribute name="testMethod" default=""/>
         <element name="customize2" optional="true"/>
         <sequential>
            <condition property="test.class.or.method" value="-methods @{testClass}.@{testMethod}" else="-testclass @{testClass}">
               <isset property="test.method"/>
            </condition>
            <condition property="testng.cmd.args" value="@{testClass}" else="-suitename UCA -testname @{{testClass}} ${{test.class.or.method}}">
               <matches string="@{testClass}" pattern=".*\.xml"/>
            </condition>
            <delete dir="${build.test.results.dir}" quiet="true"/>
            <mkdir dir="${build.test.results.dir}"/>
            <j2seproject3:debug classname="org.testng.TestNG" classpath="${debug.test.classpath}">
               <customize>
                  <customize2/>
                  <jvmarg value="-ea"/>
                  <arg line="${testng.debug.mode}"/>
                  <arg line="-d ${build.test.results.dir}"/>
                  <arg line="-listener org.testng.reporters.VerboseReporter"/>
                  <arg line="${testng.cmd.args}"/>
               </customize>
            </j2seproject3:debug>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-testng-debug-impl" depends="-init-macrodef-testng-debug" if="${testng.available}">
      <macrodef name="testng-debug-impl" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="testClass" default="${main.class}"/>
         <attribute name="testMethod" default=""/>
         <element name="customize2" optional="true" implicit="true"/>
         <sequential>
            <j2seproject3:testng-debug testClass="@{testClass}" testMethod="@{testMethod}">
               <customize2/>
            </j2seproject3:testng-debug>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-test-debug-junit" depends="-init-macrodef-junit-debug-impl" if="${junit.available}">
      <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <attribute name="testClass" default="${main.class}"/>
         <attribute name="testMethod" default=""/>
         <sequential>
            <j2seproject3:test-debug-impl includes="@{includes}" excludes="@{excludes}" testincludes="@{testincludes}" testmethods="@{testmethods}">
               <customize>
                  <classpath>
                     <path path="${run.test.classpath}"/>
                  </classpath>
                  <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
                  <jvmarg line="${run.jvmargs}"/>
                  <jvmarg line="${run.jvmargs.ide}"/>
               </customize>
            </j2seproject3:test-debug-impl>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-test-debug-testng" depends="-init-macrodef-testng-debug-impl" if="${testng.available}">
      <macrodef name="test-debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="includes" default="${includes}"/>
         <attribute name="excludes" default="${excludes}"/>
         <attribute name="testincludes" default="**"/>
         <attribute name="testmethods" default=""/>
         <attribute name="testClass" default="${main.class}"/>
         <attribute name="testMethod" default=""/>
         <sequential>
            <j2seproject3:testng-debug-impl testClass="@{testClass}" testMethod="@{testMethod}">
               <customize2>
                  <syspropertyset>
                     <propertyref prefix="test-sys-prop."/>
                     <mapper from="test-sys-prop.*" to="*" type="glob"/>
                  </syspropertyset>
               </customize2>
            </j2seproject3:testng-debug-impl>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-test-debug" depends="-init-macrodef-test-debug-junit,-init-macrodef-test-debug-testng"/>
   <!--
                pre NB7.2 profiling section; consider it deprecated
            -->
   <target name="profile-init" depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile, -profile-init-check" if="profiler.info.jvmargs.agent"/>
   <target name="-profile-pre-init" if="profiler.info.jvmargs.agent">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-profile-post-init" if="profiler.info.jvmargs.agent">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-profile-init-macrodef-profile" if="profiler.info.jvmargs.agent">
      <macrodef name="resolve">
         <attribute name="name"/>
         <attribute name="value"/>
         <sequential>
            <property name="@{name}" value="${env.@{value}}"/>
         </sequential>
      </macrodef>
      <macrodef name="profile">
         <attribute name="classname" default="${main.class}"/>
         <element name="customize" optional="true"/>
         <sequential>
            <property environment="env"/>
            <resolve name="profiler.current.path" value="${profiler.info.pathvar}"/>
            <java fork="true" classname="@{classname}" dir="${profiler.info.dir}" jvm="${profiler.info.jvm}" failonerror="${java.failonerror}">
               <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
               <jvmarg value="${profiler.info.jvmargs.agent}"/>
               <jvmarg line="${profiler.info.jvmargs}"/>
               <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>
               <arg line="${application.args}"/>
               <classpath>
                  <path path="${run.classpath}"/>
               </classpath>
               <syspropertyset>
                  <propertyref prefix="run-sys-prop."/>
                  <mapper type="glob" from="run-sys-prop.*" to="*"/>
               </syspropertyset>
               <customize/>
            </java>
         </sequential>
      </macrodef>
   </target>
   <target name="-profile-init-check" depends="-profile-pre-init, init, -profile-post-init, -profile-init-macrodef-profile" if="profiler.info.jvmargs.agent">
      <fail unless="profiler.info.jvm">Must set JVM to use for profiling in profiler.info.jvm</fail>
      <fail unless="profiler.info.jvmargs.agent">Must set profiler agent JVM arguments in profiler.info.jvmargs.agent</fail>
   </target>
   <!--
                end of pre NB7.2 profiling section
            -->
   <target name="-init-macrodef-nbjpda" depends="-init-debug-args">
      <macrodef name="nbjpdastart" uri="http://www.netbeans.org/ns/j2se-project/1">
         <attribute name="name" default="${main.class}"/>
         <attribute name="classpath" default="${debug.classpath}"/>
         <attribute name="stopclassname" default=""/>
         <sequential>
            <nbjpdastart transport="${debug-transport}" addressproperty="jpda.address" name="@{name}" stopclassname="@{stopclassname}">
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
            </nbjpdastart>
         </sequential>
      </macrodef>
      <macrodef name="nbjpdareload" uri="http://www.netbeans.org/ns/j2se-project/1">
         <attribute name="dir" default="${build.classes.dir}"/>
         <sequential>
            <nbjpdareload>
               <fileset includes="${fix.classes}" dir="@{dir}">
                  <include name="${fix.includes}*.class"/>
               </fileset>
            </nbjpdareload>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-debug-args">
      <property name="version-output" value="java version &quot;${ant.java.version}"/>
      <condition property="have-jdk-older-than-1.4">
         <or>
            <contains string="${version-output}" substring="java version &quot;1.0"/>
            <contains string="${version-output}" substring="java version &quot;1.1"/>
            <contains string="${version-output}" substring="java version &quot;1.2"/>
            <contains string="${version-output}" substring="java version &quot;1.3"/>
         </or>
      </condition>
      <condition property="debug-args-line" value="-Xdebug -Xnoagent -Djava.compiler=none" else="-Xdebug">
         <istrue value="${have-jdk-older-than-1.4}"/>
      </condition>
      <condition property="debug-transport-by-os" value="dt_shmem" else="dt_socket">
         <os family="windows"/>
      </condition>
      <condition property="debug-transport" value="${debug.transport}" else="${debug-transport-by-os}">
         <isset property="debug.transport"/>
      </condition>
   </target>
   <target name="-init-macrodef-debug" depends="-init-debug-args">
      <macrodef name="debug" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="classname" default="${main.class}"/>
         <attribute name="classpath" default="${debug.classpath}"/>
         <element name="customize" optional="true"/>
         <sequential>
            <java fork="true" classname="@{classname}" failonerror="${java.failonerror}" dir="${work.dir}">
               <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
               <jvmarg line="${debug-args-line}"/>
               <jvmarg value="-Xrunjdwp:transport=${debug-transport},address=${jpda.address}"/>
               <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>
               <redirector inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}" errorencoding="${runtime.encoding}"/>
               <jvmarg line="${run.jvmargs}"/>
               <jvmarg line="${run.jvmargs.ide}"/>
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
               <syspropertyset>
                  <propertyref prefix="run-sys-prop."/>
                  <mapper type="glob" from="run-sys-prop.*" to="*"/>
               </syspropertyset>
               <customize/>
            </java>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-java">
      <macrodef name="java" uri="http://www.netbeans.org/ns/j2se-project/1">
         <attribute name="classname" default="${main.class}"/>
         <attribute name="classpath" default="${run.classpath}"/>
         <attribute name="jvm" default="jvm"/>
         <element name="customize" optional="true"/>
         <sequential>
            <java fork="true" classname="@{classname}" failonerror="${java.failonerror}" dir="${work.dir}">
               <jvmarg line="${endorsed.classpath.cmd.line.arg}"/>
               <jvmarg value="-Dfile.encoding=${runtime.encoding}"/>
               <redirector inputencoding="${runtime.encoding}" outputencoding="${runtime.encoding}" errorencoding="${runtime.encoding}"/>
               <jvmarg line="${run.jvmargs}"/>
               <jvmarg line="${run.jvmargs.ide}"/>
               <classpath>
                  <path path="@{classpath}"/>
               </classpath>
               <syspropertyset>
                  <propertyref prefix="run-sys-prop."/>
                  <mapper type="glob" from="run-sys-prop.*" to="*"/>
               </syspropertyset>
               <customize/>
            </java>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-macrodef-copylibs">
      <macrodef name="copylibs" uri="http://www.netbeans.org/ns/j2se-project/3">
         <attribute name="manifest" default="${manifest.file}"/>
         <element name="customize" optional="true"/>
         <sequential>
            <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
            <pathconvert property="run.classpath.without.build.classes.dir">
               <path path="${run.classpath}"/>
               <map from="${build.classes.dir.resolved}" to=""/>
            </pathconvert>
            <pathconvert pathsep=" " property="jar.classpath">
               <path path="${run.classpath.without.build.classes.dir}"/>
               <chainedmapper>
                  <flattenmapper/>
                  <filtermapper>
                     <replacestring from=" " to="%20"/>
                  </filtermapper>
                  <globmapper from="*" to="lib/*"/>
               </chainedmapper>
            </pathconvert>
            <taskdef classname="org.netbeans.modules.java.j2seproject.copylibstask.CopyLibs" classpath="${libs.CopyLibs.classpath}" name="copylibs"/>
            <copylibs rebase="${copylibs.rebase}" compress="${jar.compress}" jarfile="${dist.jar}" manifest="@{manifest}" manifestencoding="UTF-8" runtimeclasspath="${run.classpath.without.build.classes.dir}" index="${jar.index}" indexMetaInf="${jar.index.metainf}" excludeFromCopy="${copylibs.excludes}">
               <fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>
               <manifest>
                  <attribute name="Class-Path" value="${jar.classpath}"/>
                  <customize/>
               </manifest>
            </copylibs>
         </sequential>
      </macrodef>
   </target>
   <target name="-init-presetdef-jar">
      <presetdef name="jar" uri="http://www.netbeans.org/ns/j2se-project/1">
         <jar jarfile="${dist.jar}" compress="${jar.compress}" index="${jar.index}" manifestencoding="UTF-8">
            <j2seproject1:fileset dir="${build.classes.dir}" excludes="${dist.archive.excludes}"/>
         </jar>
      </presetdef>
   </target>
   <target name="-init-ap-cmdline-properties">
      <property name="annotation.processing.enabled" value="true"/>
      <property name="annotation.processing.processors.list" value=""/>
      <property name="annotation.processing.processor.options" value=""/>
      <property name="annotation.processing.run.all.processors" value="true"/>
      <property name="javac.processorpath" value="${javac.classpath}"/>
      <property name="javac.test.processorpath" value="${javac.test.classpath}"/>
      <condition property="ap.supported.internal" value="true">
         <not>
            <matches string="${javac.source}" pattern="1\.[0-5](\..*)?"/>
         </not>
      </condition>
   </target>
   <target name="-init-ap-cmdline-supported" depends="-init-ap-cmdline-properties" if="ap.supported.internal">
      <condition property="ap.processors.internal" value="-processor ${annotation.processing.processors.list}" else="">
         <isfalse value="${annotation.processing.run.all.processors}"/>
      </condition>
      <condition property="ap.proc.none.internal" value="-proc:none" else="">
         <isfalse value="${annotation.processing.enabled}"/>
      </condition>
   </target>
   <target name="-init-ap-cmdline" depends="-init-ap-cmdline-properties,-init-ap-cmdline-supported">
      <property name="ap.cmd.line.internal" value=""/>
   </target>
   <target name="init" depends="-pre-init,-init-private,-init-user,-init-project,-do-init,-post-init,-init-check,-init-macrodef-property,-init-macrodef-javac,-init-macrodef-test,-init-macrodef-test-debug,-init-macrodef-nbjpda,-init-macrodef-debug,-init-macrodef-java,-init-presetdef-jar,-init-ap-cmdline"/>
   <!--
                ===================
                COMPILATION SECTION
                ===================
            -->
   <target name="-deps-jar-init" unless="built-jar.properties">
      <property name="built-jar.properties" location="${build.dir}/built-jar.properties"/>
      <delete file="${built-jar.properties}}" quiet="true"/>
   </target>
   <target name="-warn-already-built-jar" if="already.built.jar.${{basedir}}">
      <echo level="warn" message="Cycle detected: UCA was already built"/>
   </target>
   <target name="deps-jar" depends="init,-deps-jar-init" unless="no.deps">
      <mkdir dir="${build.dir}"/>
      <touch file="${built-jar.properties}}" verbose="false"/>
      <property file="${built-jar.properties}}" prefix="already.built.jar."/>
      <antcall target="-warn-already-built-jar"/>
      <propertyfile file="${built-jar.properties}}">
         <entry key="${basedir}" value=""/>
      </propertyfile>
   </target>
   <target name="-verify-automatic-build" depends="init,-check-automatic-build,-clean-after-automatic-build"/>
   <target name="-check-automatic-build" depends="init">
      <available file="${build.classes.dir}/.netbeans_automatic_build" property="netbeans.automatic.build"/>
   </target>
   <target name="-clean-after-automatic-build" depends="init" if="netbeans.automatic.build">
      <antcall target="clean"/>
   </target>
   <target name="-pre-pre-compile" depends="init,deps-jar">
      <mkdir dir="${build.classes.dir}"/>
   </target>
   <target name="-pre-compile">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-compile-depend" if="do.depend.true">
      <pathconvert property="build.generated.subdirs">
         <dirset dir="${build.generated.sources.dir}" erroronmissingdir="false">
            <include name="*"/>
         </dirset>
      </pathconvert>
      <j2seproject3:depend srcdir="${src.dir}:${build.generated.subdirs}"/>
   </target>
   <target name="-do-compile" depends="init,deps-jar,-pre-pre-compile,-pre-compile, -copy-persistence-xml,-compile-depend" if="have.sources">
      <j2seproject3:javac gensrcdir="${build.generated.sources.dir}"/>
      <copy todir="${build.classes.dir}">
         <fileset dir="${src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>
      </copy>
   </target>
   <target name="-copy-persistence-xml" if="has.persistence.xml">
      <mkdir dir="${build.classes.dir}/META-INF"/>
      <copy todir="${build.classes.dir}/META-INF">
         <fileset dir="${meta.inf.dir}" includes="persistence.xml orm.xml"/>
      </copy>
   </target>
   <target name="-post-compile">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="compile" depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile,-do-compile,-post-compile" description="Compile project."/>
   <target name="-pre-compile-single">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-do-compile-single" depends="init,deps-jar,-pre-pre-compile">
      <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
      <j2seproject3:force-recompile/>
      <j2seproject3:javac includes="${javac.includes}" excludes="" sourcepath="${src.dir}" gensrcdir="${build.generated.sources.dir}"/>
   </target>
   <target name="-post-compile-single">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="compile-single" depends="init,deps-jar,-verify-automatic-build,-pre-pre-compile,-pre-compile-single,-do-compile-single,-post-compile-single"/>
   <!--
                ====================
                JAR BUILDING SECTION
                ====================
            -->
   <target name="-pre-pre-jar" depends="init">
      <dirname property="dist.jar.dir" file="${dist.jar}"/>
      <mkdir dir="${dist.jar.dir}"/>
   </target>
   <target name="-pre-jar">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-do-jar-create-manifest" depends="init" if="do.archive" unless="manifest.available">
      <tempfile destdir="${build.dir}" deleteonexit="true" property="tmp.manifest.file"/>
      <touch file="${tmp.manifest.file}" verbose="false"/>
   </target>
   <target name="-do-jar-copy-manifest" depends="init" if="do.archive+manifest.available">
      <tempfile destdir="${build.dir}" deleteonexit="true" property="tmp.manifest.file"/>
      <copy file="${manifest.file}" tofile="${tmp.manifest.file}" encoding="${manifest.encoding}" outputencoding="UTF-8"/>
   </target>
   <target name="-do-jar-set-mainclass" depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+main.class.available">
      <manifest file="${tmp.manifest.file}" mode="update" encoding="UTF-8">
         <attribute name="Main-Class" value="${main.class}"/>
      </manifest>
   </target>
   <target name="-do-jar-set-profile" depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+profile.available">
      <manifest file="${tmp.manifest.file}" mode="update" encoding="UTF-8">
         <attribute name="Profile" value="${javac.profile}"/>
      </manifest>
   </target>
   <target name="-do-jar-set-splashscreen" depends="init,-do-jar-create-manifest,-do-jar-copy-manifest" if="do.archive+splashscreen.available">
      <basename file="${application.splash}" property="splashscreen.basename"/>
      <mkdir dir="${build.classes.dir}/META-INF"/>
      <copy failonerror="false" file="${application.splash}" todir="${build.classes.dir}/META-INF"/>
      <manifest file="${tmp.manifest.file}" mode="update" encoding="UTF-8">
         <attribute name="SplashScreen-Image" value="META-INF/${splashscreen.basename}"/>
      </manifest>
   </target>
   <target name="-do-jar-copylibs" depends="init,-init-macrodef-copylibs,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.mkdist">
      <j2seproject3:copylibs manifest="${tmp.manifest.file}"/>
      <echo level="info">To run this application from the command line without Ant, try:</echo>
      <property name="dist.jar.resolved" location="${dist.jar}"/>
      <echo level="info">java -jar "${dist.jar.resolved}"</echo>
   </target>
   <target name="-do-jar-jar" depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen" if="do.archive" unless="do.mkdist">
      <j2seproject1:jar manifest="${tmp.manifest.file}"/>
      <property location="${build.classes.dir}" name="build.classes.dir.resolved"/>
      <property location="${dist.jar}" name="dist.jar.resolved"/>
      <pathconvert property="run.classpath.with.dist.jar">
         <path path="${run.classpath}"/>
         <map from="${build.classes.dir.resolved}" to="${dist.jar.resolved}"/>
      </pathconvert>
      <condition property="jar.usage.message" else="" value="To run this application from the command line without Ant, try:${line.separator}${platform.java} -cp ${run.classpath.with.dist.jar} ${main.class}">
         <isset property="main.class.available"/>
      </condition>
      <condition property="jar.usage.level" else="debug" value="info">
         <isset property="main.class.available"/>
      </condition>
      <echo level="${jar.usage.level}" message="${jar.usage.message}"/>
   </target>
   <target name="-do-jar-delete-manifest" depends="-do-jar-copylibs" if="do.archive">
      <delete>
         <fileset file="${tmp.manifest.file}"/>
      </delete>
   </target>
   <target name="-do-jar-without-libraries" depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-jar,-do-jar-delete-manifest"/>
   <target name="-do-jar-with-libraries" depends="init,compile,-pre-pre-jar,-pre-jar,-do-jar-create-manifest,-do-jar-copy-manifest,-do-jar-set-mainclass,-do-jar-set-profile,-do-jar-set-splashscreen,-do-jar-copylibs,-do-jar-delete-manifest"/>
   <target name="-post-jar" depends="-jfx-copylibs,-rebase-libs,jfx-deployment">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-do-jar" depends="init,compile,-pre-jar,-do-jar-without-libraries,-do-jar-with-libraries,-post-jar"/>
   <target name="jar" depends="init,compile,-pre-jar,-do-jar,-post-jar" description="Build JAR."/>
   <!--
                =================
                EXECUTION SECTION
                =================
            -->
   <target name="run" depends="init,compile,jar" description="Run a main class.">
      <j2seproject1:java>
         <customize>
            <arg line="${application.args}"/>
         </customize>
      </j2seproject1:java>
   </target>
   <target name="-do-not-recompile">
      <property name="javac.includes.binary" value=""/>
   </target>
   <target name="run-single" depends="init,compile-single">
      <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
      <j2seproject1:java classname="${run.class}"/>
   </target>
   <target name="run-test-with-main" depends="init,compile-test-single">
      <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
      <j2seproject1:java classname="${run.class}" classpath="${run.test.classpath}"/>
   </target>
   <!--
                =================
                DEBUGGING SECTION
                =================
            -->
   <target name="-debug-start-debugger" if="netbeans.home" depends="init">
      <j2seproject1:nbjpdastart name="${debug.class}"/>
   </target>
   <target name="-debug-start-debugger-main-test" if="netbeans.home" depends="init">
      <j2seproject1:nbjpdastart name="${debug.class}" classpath="${debug.test.classpath}"/>
   </target>
   <target name="-debug-start-debuggee" depends="init,compile">
      <j2seproject3:debug>
         <customize>
            <arg line="${application.args}"/>
         </customize>
      </j2seproject3:debug>
   </target>
   <target name="debug" if="netbeans.home" depends="init,compile,-debug-start-debugger,-debug-start-debuggee,jar" description="Debug project in IDE."/>
   <target name="-debug-start-debugger-stepinto" if="netbeans.home" depends="init">
      <j2seproject1:nbjpdastart stopclassname="${main.class}"/>
   </target>
   <target name="debug-stepinto" if="netbeans.home" depends="init,compile,-debug-start-debugger-stepinto,-debug-start-debuggee"/>
   <target name="-debug-start-debuggee-single" if="netbeans.home" depends="init,compile-single">
      <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
      <j2seproject3:debug classname="${debug.class}"/>
   </target>
   <target name="debug-single" if="netbeans.home" depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-single"/>
   <target name="-debug-start-debuggee-main-test" if="netbeans.home" depends="init,compile-test-single">
      <fail unless="debug.class">Must select one file in the IDE or set debug.class</fail>
      <j2seproject3:debug classname="${debug.class}" classpath="${debug.test.classpath}"/>
   </target>
   <target name="debug-test-with-main" if="netbeans.home" depends="init,compile-test-single,-debug-start-debugger-main-test,-debug-start-debuggee-main-test"/>
   <target name="-pre-debug-fix" depends="init">
      <fail unless="fix.includes">Must set fix.includes</fail>
      <property name="javac.includes" value="${fix.includes}.java"/>
   </target>
   <target name="-do-debug-fix" if="netbeans.home" depends="init,-pre-debug-fix,compile-single">
      <j2seproject1:nbjpdareload/>
   </target>
   <target name="debug-fix" if="netbeans.home" depends="init,-pre-debug-fix,-do-debug-fix"/>
   <!--
                =================
                PROFILING SECTION
                =================
            -->
   <!--
                pre NB7.2 profiler integration
            -->
   <target depends="profile-init,compile" description="Profile a project in the IDE." if="profiler.info.jvmargs.agent" name="-profile-pre72">
      <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
      <nbprofiledirect>
         <classpath>
            <path path="${run.classpath}"/>
         </classpath>
      </nbprofiledirect>
      <profile/>
   </target>
   <target depends="profile-init,compile-single" description="Profile a selected class in the IDE." if="profiler.info.jvmargs.agent" name="-profile-single-pre72">
      <fail unless="profile.class">Must select one file in the IDE or set profile.class</fail>
      <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
      <nbprofiledirect>
         <classpath>
            <path path="${run.classpath}"/>
         </classpath>
      </nbprofiledirect>
      <profile classname="${profile.class}"/>
   </target>
   <target depends="profile-init,compile-single" if="profiler.info.jvmargs.agent" name="-profile-applet-pre72">
      <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
      <nbprofiledirect>
         <classpath>
            <path path="${run.classpath}"/>
         </classpath>
      </nbprofiledirect>
      <profile classname="sun.applet.AppletViewer">
         <customize>
            <arg value="${applet.url}"/>
         </customize>
      </profile>
   </target>
   <target depends="profile-init,compile-test-single" if="profiler.info.jvmargs.agent" name="-profile-test-single-pre72">
      <fail unless="netbeans.home">This target only works when run from inside the NetBeans IDE.</fail>
      <nbprofiledirect>
         <classpath>
            <path path="${run.test.classpath}"/>
         </classpath>
      </nbprofiledirect>
      <junit dir="${profiler.info.dir}" errorproperty="tests.failed" failureproperty="tests.failed" fork="true" jvm="${profiler.info.jvm}" showoutput="true">
         <env key="${profiler.info.pathvar}" path="${profiler.info.agentpath}:${profiler.current.path}"/>
         <jvmarg value="${profiler.info.jvmargs.agent}"/>
         <jvmarg line="${profiler.info.jvmargs}"/>
         <test name="${profile.class}"/>
         <classpath>
            <path path="${run.test.classpath}"/>
         </classpath>
         <syspropertyset>
            <propertyref prefix="test-sys-prop."/>
            <mapper from="test-sys-prop.*" to="*" type="glob"/>
         </syspropertyset>
         <formatter type="brief" usefile="false"/>
         <formatter type="xml"/>
      </junit>
   </target>
   <!--
                end of pre NB72 profiling section
            -->
   <target name="-profile-check" if="netbeans.home">
      <condition property="profiler.configured">
         <or>
            <contains string="${run.jvmargs.ide}" substring="-agentpath:" casesensitive="true"/>
            <contains string="${run.jvmargs.ide}" substring="-javaagent:" casesensitive="true"/>
         </or>
      </condition>
   </target>
   <target name="profile" depends="-profile-check,-profile-pre72,jar" description="Profile a project in the IDE." if="profiler.configured" unless="profiler.info.jvmargs.agent">
      <startprofiler/>
      <antcall target="run"/>
   </target>
   <target name="profile-single" depends="-profile-check,-profile-single-pre72" description="Profile a selected class in the IDE." if="profiler.configured" unless="profiler.info.jvmargs.agent">
      <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
      <startprofiler/>
      <antcall target="run-single"/>
   </target>
   <target name="profile-test-single" depends="-profile-test-single-pre72" description="Profile a selected test in the IDE."/>
   <target name="profile-test" depends="-profile-check" description="Profile a selected test in the IDE." if="profiler.configured" unless="profiler.info.jvmargs">
      <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
      <startprofiler/>
      <antcall target="test-single"/>
   </target>
   <target name="profile-test-with-main" depends="-profile-check" description="Profile a selected class in the IDE." if="profiler.configured">
      <fail unless="run.class">Must select one file in the IDE or set run.class</fail>
      <startprofiler/>
      <antcall target="run-test-with-main"/>
   </target>
   <target name="profile-applet" depends="-profile-check,-profile-applet-pre72" if="profiler.configured" unless="profiler.info.jvmargs.agent">
      <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
      <startprofiler/>
      <antcall target="run-applet"/>
   </target>
   <!--
                ===============
                JAVADOC SECTION
                ===============
            -->
   <target name="-javadoc-build" depends="init" if="have.sources">
      <mkdir dir="${dist.javadoc.dir}"/>
      <condition property="javadoc.endorsed.classpath.cmd.line.arg" value="-J${endorsed.classpath.cmd.line.arg}" else="">
         <and>
            <isset property="endorsed.classpath.cmd.line.arg"/>
            <not>
               <equals arg1="${endorsed.classpath.cmd.line.arg}" arg2=""/>
            </not>
         </and>
      </condition>
      <condition property="bug5101868workaround" value="*.java" else="">
         <matches pattern="1\.[56](\..*)?" string="${java.version}"/>
      </condition>
      <javadoc destdir="${dist.javadoc.dir}" source="${javac.source}" notree="${javadoc.notree}" use="${javadoc.use}" nonavbar="${javadoc.nonavbar}" noindex="${javadoc.noindex}" splitindex="${javadoc.splitindex}" author="${javadoc.author}" version="${javadoc.version}" windowtitle="${javadoc.windowtitle}" private="${javadoc.private}" additionalparam="-J-Dfile.encoding=${file.encoding} ${javadoc.additionalparam}" failonerror="true" useexternalfile="true" encoding="${javadoc.encoding.used}" docencoding="UTF-8" charset="UTF-8">
         <classpath>
            <path path="${javac.classpath}"/>
         </classpath>
         <fileset dir="${src.dir}" includes="${includes}" excludes="${bug5101868workaround},${excludes}">
            <filename name="**/*.java"/>
         </fileset>
         <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
            <include name="**/*.java"/>
            <exclude name="*.java"/>
         </fileset>
         <arg line="${javadoc.endorsed.classpath.cmd.line.arg}"/>
      </javadoc>
      <copy todir="${dist.javadoc.dir}">
         <fileset dir="${src.dir}" includes="${includes}" excludes="${excludes}">
            <filename name="**/doc-files/**"/>
         </fileset>
         <fileset dir="${build.generated.sources.dir}" erroronmissingdir="false">
            <include name="**/doc-files/**"/>
         </fileset>
      </copy>
   </target>
   <target name="-javadoc-browse" if="netbeans.home" unless="no.javadoc.preview" depends="init,-javadoc-build">
      <nbbrowse file="${dist.javadoc.dir}/index.html"/>
   </target>
   <target name="javadoc" depends="init,-javadoc-build,-javadoc-browse" description="Build Javadoc."/>
   <!--
                =========================
                TEST COMPILATION SECTION
                =========================
            -->
   <target name="-pre-pre-compile-test" if="have.tests" depends="init,compile">
      <mkdir dir="${build.test.classes.dir}"/>
   </target>
   <target name="-pre-compile-test">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-compile-test-depend" if="do.depend.true">
      <j2seproject3:depend srcdir="${test.src.dir}" destdir="${build.test.classes.dir}" classpath="${javac.test.classpath}"/>
   </target>
   <target name="-do-compile-test" if="have.tests" depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test,-compile-test-depend">
      <j2seproject3:javac srcdir="${test.src.dir}" destdir="${build.test.classes.dir}" debug="true" classpath="${javac.test.classpath}" processorpath="${javac.test.processorpath}" apgeneratedsrcdir="${build.test.classes.dir}"/>
      <copy todir="${build.test.classes.dir}">
         <fileset dir="${test.src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>
      </copy>
   </target>
   <target name="-post-compile-test">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="compile-test" depends="init,compile,-pre-pre-compile-test,-pre-compile-test,-do-compile-test,-post-compile-test"/>
   <target name="-pre-compile-test-single">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="-do-compile-test-single" if="have.tests" depends="init,deps-jar,compile,-pre-pre-compile-test,-pre-compile-test-single">
      <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
      <j2seproject3:force-recompile destdir="${build.test.classes.dir}"/>
      <j2seproject3:javac srcdir="${test.src.dir}" sourcepath="${test.src.dir}" destdir="${build.test.classes.dir}" debug="true" classpath="${javac.test.classpath}" includes="${javac.includes}" excludes="" processorpath="${javac.test.processorpath}" apgeneratedsrcdir="${build.test.classes.dir}"/>
      <copy todir="${build.test.classes.dir}">
         <fileset dir="${test.src.dir}" includes="${includes}" excludes="${build.classes.excludes},${excludes}"/>
      </copy>
   </target>
   <target name="-post-compile-test-single">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="compile-test-single" depends="init,compile,-pre-pre-compile-test,-pre-compile-test-single,-do-compile-test-single,-post-compile-test-single"/>
   <!--
                =======================
                TEST EXECUTION SECTION
                =======================
            -->
   <target name="-pre-test-run" if="have.tests" depends="init">
      <mkdir dir="${build.test.results.dir}"/>
   </target>
   <target name="-do-test-run" if="have.tests" depends="init,compile-test,-pre-test-run">
      <j2seproject3:test testincludes="**/*Test.java" includes="${includes}"/>
   </target>
   <target name="-post-test-run" if="have.tests" depends="init,compile-test,-pre-test-run,-do-test-run">
      <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
   </target>
   <target name="test-report" if="have.tests" depends="init"/>
   <target name="-test-browse" if="netbeans.home+have.tests" depends="init"/>
   <target name="test" depends="init,compile-test,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests."/>
   <target name="-pre-test-run-single" if="have.tests" depends="init">
      <mkdir dir="${build.test.results.dir}"/>
   </target>
   <target name="-do-test-run-single" if="have.tests" depends="init,compile-test-single,-pre-test-run-single">
      <fail unless="test.includes">Must select some files in the IDE or set test.includes</fail>
      <j2seproject3:test includes="${test.includes}" excludes="" testincludes="${test.includes}"/>
   </target>
   <target name="-post-test-run-single" if="have.tests" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single">
      <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
   </target>
   <target name="test-single" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single,-post-test-run-single" description="Run single unit test."/>
   <target name="-do-test-run-single-method" if="have.tests" depends="init,compile-test-single,-pre-test-run-single">
      <fail unless="test.class">Must select some files in the IDE or set test.class</fail>
      <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
      <j2seproject3:test includes="${javac.includes}" excludes="" testincludes="${test.class}" testmethods="${test.method}"/>
   </target>
   <target name="-post-test-run-single-method" if="have.tests" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method">
      <fail if="tests.failed" unless="ignore.failing.tests">Some tests failed; see details above.</fail>
   </target>
   <target name="test-single-method" depends="init,compile-test-single,-pre-test-run-single,-do-test-run-single-method,-post-test-run-single-method" description="Run single unit test."/>
   <!--
                =======================
                TEST DEBUGGING SECTION
                =======================
            -->
   <target name="-debug-start-debuggee-test" if="have.tests" depends="init,compile-test-single,-pre-test-run-single">
      <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
      <j2seproject3:test-debug includes="${javac.includes}" excludes="" testincludes="${javac.includes}" testClass="${test.class}"/>
   </target>
   <target name="-debug-start-debuggee-test-method" if="have.tests" depends="init,compile-test-single,-pre-test-run-single">
      <fail unless="test.class">Must select one file in the IDE or set test.class</fail>
      <fail unless="test.method">Must select some method in the IDE or set test.method</fail>
      <j2seproject3:test-debug includes="${javac.includes}" excludes="" testincludes="${test.class}" testmethods="${test.method}" testClass="${test.class}" testMethod="${test.method}"/>
   </target>
   <target name="-debug-start-debugger-test" if="netbeans.home+have.tests" depends="init,compile-test">
      <j2seproject1:nbjpdastart name="${test.class}" classpath="${debug.test.classpath}"/>
   </target>
   <target name="debug-test" depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test"/>
   <target name="debug-test-method" depends="init,compile-test-single,-debug-start-debugger-test,-debug-start-debuggee-test-method"/>
   <target name="-do-debug-fix-test" if="netbeans.home" depends="init,-pre-debug-fix,compile-test-single">
      <j2seproject1:nbjpdareload dir="${build.test.classes.dir}"/>
   </target>
   <target name="debug-fix-test" if="netbeans.home" depends="init,-pre-debug-fix,-do-debug-fix-test"/>
   <!--
                =========================
                APPLET EXECUTION SECTION
                =========================
            -->
   <target name="run-applet" depends="init,compile-single">
      <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
      <j2seproject1:java classname="sun.applet.AppletViewer">
         <customize>
            <arg value="${applet.url}"/>
         </customize>
      </j2seproject1:java>
   </target>
   <!--
                =========================
                APPLET DEBUGGING  SECTION
                =========================
            -->
   <target name="-debug-start-debuggee-applet" if="netbeans.home" depends="init,compile-single">
      <fail unless="applet.url">Must select one file in the IDE or set applet.url</fail>
      <j2seproject3:debug classname="sun.applet.AppletViewer">
         <customize>
            <arg value="${applet.url}"/>
         </customize>
      </j2seproject3:debug>
   </target>
   <target name="debug-applet" if="netbeans.home" depends="init,compile-single,-debug-start-debugger,-debug-start-debuggee-applet"/>
   <!--
                ===============
                CLEANUP SECTION
                ===============
            -->
   <target name="-deps-clean-init" unless="built-clean.properties">
      <property name="built-clean.properties" location="${build.dir}/built-clean.properties"/>
      <delete file="${built-clean.properties}}" quiet="true"/>
   </target>
   <target name="-warn-already-built-clean" if="already.built.clean.${{basedir}}">
      <echo level="warn" message="Cycle detected: UCA was already built"/>
   </target>
   <target name="deps-clean" depends="init,-deps-clean-init" unless="no.deps">
      <mkdir dir="${build.dir}"/>
      <touch file="${built-clean.properties}}" verbose="false"/>
      <property file="${built-clean.properties}}" prefix="already.built.clean."/>
      <antcall target="-warn-already-built-clean"/>
      <propertyfile file="${built-clean.properties}}">
         <entry key="${basedir}" value=""/>
      </propertyfile>
   </target>
   <target name="-do-clean" depends="init">
      <delete dir="${build.dir}"/>
      <delete dir="${dist.dir}" followsymlinks="false" includeemptydirs="true"/>
   </target>
   <target name="-post-clean">
      <!-- Empty placeholder for easier customization. -->
      <!-- You can override this target in the ../build.xml file. -->
   </target>
   <target name="clean" depends="init,deps-clean,-do-clean,-post-clean" description="Clean build products."/>
   <target name="-check-call-dep">
      <property file="${call.built.properties}" prefix="already.built."/>
      <condition property="should.call.dep">
         <and>
            <not>
               <isset property="already.built.${call.subproject}"/>
            </not>
            <available file="${call.script}"/>
         </and>
      </condition>
   </target>
   <target name="-maybe-call-dep" depends="-check-call-dep" if="should.call.dep">
      <ant target="${call.target}" antfile="${call.script}" inheritall="false">
         <propertyset>
            <propertyref prefix="transfer."/>
            <mapper type="glob" from="transfer.*" to="*"/>
         </propertyset>
      </ant>
   </target>
</project>